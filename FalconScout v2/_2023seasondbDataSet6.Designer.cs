//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace T250DynoScout_v2023 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("_2023seasondbDataSet6")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class _2023seasondbDataSet6 : global::System.Data.DataSet {
        
        private UpdatePreviewsDataTable tableUpdatePreviews;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public _2023seasondbDataSet6() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected _2023seasondbDataSet6(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UpdatePreviews"] != null)) {
                    base.Tables.Add(new UpdatePreviewsDataTable(ds.Tables["UpdatePreviews"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UpdatePreviewsDataTable UpdatePreviews {
            get {
                return this.tableUpdatePreviews;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            _2023seasondbDataSet6 cln = ((_2023seasondbDataSet6)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UpdatePreviews"] != null)) {
                    base.Tables.Add(new UpdatePreviewsDataTable(ds.Tables["UpdatePreviews"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableUpdatePreviews = ((UpdatePreviewsDataTable)(base.Tables["UpdatePreviews"]));
            if ((initTable == true)) {
                if ((this.tableUpdatePreviews != null)) {
                    this.tableUpdatePreviews.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "_2023seasondbDataSet6";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/_2023seasondbDataSet6.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUpdatePreviews = new UpdatePreviewsDataTable();
            base.Tables.Add(this.tableUpdatePreviews);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeUpdatePreviews() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            _2023seasondbDataSet6 ds = new _2023seasondbDataSet6();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void UpdatePreviewsRowChangeEventHandler(object sender, UpdatePreviewsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UpdatePreviewsDataTable : global::System.Data.TypedTableBase<UpdatePreviewsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnTeam;
            
            private global::System.Data.DataColumn columnMatch;
            
            private global::System.Data.DataColumn columnTime;
            
            private global::System.Data.DataColumn columnRecordType;
            
            private global::System.Data.DataColumn columnMode;
            
            private global::System.Data.DataColumn columnMobility;
            
            private global::System.Data.DataColumn columnAcqSub1;
            
            private global::System.Data.DataColumn columnAcqSub2;
            
            private global::System.Data.DataColumn columnAcqFComm;
            
            private global::System.Data.DataColumn columnAcqFLoad;
            
            private global::System.Data.DataColumn columnAcqFOther;
            
            private global::System.Data.DataColumn columnAcqFOpps;
            
            private global::System.Data.DataColumn columnDelTop;
            
            private global::System.Data.DataColumn columnDelMid;
            
            private global::System.Data.DataColumn columnDelBot;
            
            private global::System.Data.DataColumn columnDelFloor;
            
            private global::System.Data.DataColumn columnDelOut;
            
            private global::System.Data.DataColumn columnDelCoop;
            
            private global::System.Data.DataColumn columnDelDrop;
            
            private global::System.Data.DataColumn columnCone;
            
            private global::System.Data.DataColumn columnCube;
            
            private global::System.Data.DataColumn columnParked;
            
            private global::System.Data.DataColumn columnDocked;
            
            private global::System.Data.DataColumn columnEngaged;
            
            private global::System.Data.DataColumn columnChargePart;
            
            private global::System.Data.DataColumn columnEngageT;
            
            private global::System.Data.DataColumn columnEngageFail;
            
            private global::System.Data.DataColumn columnSetup;
            
            private global::System.Data.DataColumn columnAutoPts;
            
            private global::System.Data.DataColumn columnGridPts;
            
            private global::System.Data.DataColumn columnChargePts;
            
            private global::System.Data.DataColumn columnScouterName;
            
            private global::System.Data.DataColumn columnScouterError;
            
            private global::System.Data.DataColumn columnDefense;
            
            private global::System.Data.DataColumn columnAvoidance;
            
            private global::System.Data.DataColumn columnStrategy;
            
            private global::System.Data.DataColumn columnmatch_event;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsDataTable() {
                this.TableName = "UpdatePreviews";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UpdatePreviewsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected UpdatePreviewsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TeamColumn {
                get {
                    return this.columnTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MatchColumn {
                get {
                    return this.columnMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TimeColumn {
                get {
                    return this.columnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RecordTypeColumn {
                get {
                    return this.columnRecordType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeColumn {
                get {
                    return this.columnMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MobilityColumn {
                get {
                    return this.columnMobility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqSub1Column {
                get {
                    return this.columnAcqSub1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqSub2Column {
                get {
                    return this.columnAcqSub2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqFCommColumn {
                get {
                    return this.columnAcqFComm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqFLoadColumn {
                get {
                    return this.columnAcqFLoad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqFOtherColumn {
                get {
                    return this.columnAcqFOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqFOppsColumn {
                get {
                    return this.columnAcqFOpps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelTopColumn {
                get {
                    return this.columnDelTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelMidColumn {
                get {
                    return this.columnDelMid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelBotColumn {
                get {
                    return this.columnDelBot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelFloorColumn {
                get {
                    return this.columnDelFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelOutColumn {
                get {
                    return this.columnDelOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoopColumn {
                get {
                    return this.columnDelCoop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelDropColumn {
                get {
                    return this.columnDelDrop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ConeColumn {
                get {
                    return this.columnCone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CubeColumn {
                get {
                    return this.columnCube;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParkedColumn {
                get {
                    return this.columnParked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DockedColumn {
                get {
                    return this.columnDocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EngagedColumn {
                get {
                    return this.columnEngaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ChargePartColumn {
                get {
                    return this.columnChargePart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EngageTColumn {
                get {
                    return this.columnEngageT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EngageFailColumn {
                get {
                    return this.columnEngageFail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SetupColumn {
                get {
                    return this.columnSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AutoPtsColumn {
                get {
                    return this.columnAutoPts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GridPtsColumn {
                get {
                    return this.columnGridPts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ChargePtsColumn {
                get {
                    return this.columnChargePts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScouterNameColumn {
                get {
                    return this.columnScouterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScouterErrorColumn {
                get {
                    return this.columnScouterError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DefenseColumn {
                get {
                    return this.columnDefense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AvoidanceColumn {
                get {
                    return this.columnAvoidance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StrategyColumn {
                get {
                    return this.columnStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn match_eventColumn {
                get {
                    return this.columnmatch_event;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow this[int index] {
                get {
                    return ((UpdatePreviewsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddUpdatePreviewsRow(UpdatePreviewsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow AddUpdatePreviewsRow(
                        string Team, 
                        int Match, 
                        System.DateTime Time, 
                        string RecordType, 
                        string Mode, 
                        int Mobility, 
                        int AcqSub1, 
                        int AcqSub2, 
                        int AcqFComm, 
                        int AcqFLoad, 
                        int AcqFOther, 
                        int AcqFOpps, 
                        int DelTop, 
                        int DelMid, 
                        int DelBot, 
                        int DelFloor, 
                        int DelOut, 
                        int DelCoop, 
                        int DelDrop, 
                        int Cone, 
                        int Cube, 
                        int Parked, 
                        int Docked, 
                        int Engaged, 
                        int ChargePart, 
                        double EngageT, 
                        string EngageFail, 
                        int Setup, 
                        int AutoPts, 
                        int GridPts, 
                        int ChargePts, 
                        string ScouterName, 
                        int ScouterError, 
                        int Defense, 
                        int Avoidance, 
                        string Strategy, 
                        string match_event) {
                UpdatePreviewsRow rowUpdatePreviewsRow = ((UpdatePreviewsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Team,
                        Match,
                        Time,
                        RecordType,
                        Mode,
                        Mobility,
                        AcqSub1,
                        AcqSub2,
                        AcqFComm,
                        AcqFLoad,
                        AcqFOther,
                        AcqFOpps,
                        DelTop,
                        DelMid,
                        DelBot,
                        DelFloor,
                        DelOut,
                        DelCoop,
                        DelDrop,
                        Cone,
                        Cube,
                        Parked,
                        Docked,
                        Engaged,
                        ChargePart,
                        EngageT,
                        EngageFail,
                        Setup,
                        AutoPts,
                        GridPts,
                        ChargePts,
                        ScouterName,
                        ScouterError,
                        Defense,
                        Avoidance,
                        Strategy,
                        match_event};
                rowUpdatePreviewsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUpdatePreviewsRow);
                return rowUpdatePreviewsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow FindById(int Id) {
                return ((UpdatePreviewsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UpdatePreviewsDataTable cln = ((UpdatePreviewsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UpdatePreviewsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnTeam = base.Columns["Team"];
                this.columnMatch = base.Columns["Match"];
                this.columnTime = base.Columns["Time"];
                this.columnRecordType = base.Columns["RecordType"];
                this.columnMode = base.Columns["Mode"];
                this.columnMobility = base.Columns["Mobility"];
                this.columnAcqSub1 = base.Columns["AcqSub1"];
                this.columnAcqSub2 = base.Columns["AcqSub2"];
                this.columnAcqFComm = base.Columns["AcqFComm"];
                this.columnAcqFLoad = base.Columns["AcqFLoad"];
                this.columnAcqFOther = base.Columns["AcqFOther"];
                this.columnAcqFOpps = base.Columns["AcqFOpps"];
                this.columnDelTop = base.Columns["DelTop"];
                this.columnDelMid = base.Columns["DelMid"];
                this.columnDelBot = base.Columns["DelBot"];
                this.columnDelFloor = base.Columns["DelFloor"];
                this.columnDelOut = base.Columns["DelOut"];
                this.columnDelCoop = base.Columns["DelCoop"];
                this.columnDelDrop = base.Columns["DelDrop"];
                this.columnCone = base.Columns["Cone"];
                this.columnCube = base.Columns["Cube"];
                this.columnParked = base.Columns["Parked"];
                this.columnDocked = base.Columns["Docked"];
                this.columnEngaged = base.Columns["Engaged"];
                this.columnChargePart = base.Columns["ChargePart"];
                this.columnEngageT = base.Columns["EngageT"];
                this.columnEngageFail = base.Columns["EngageFail"];
                this.columnSetup = base.Columns["Setup"];
                this.columnAutoPts = base.Columns["AutoPts"];
                this.columnGridPts = base.Columns["GridPts"];
                this.columnChargePts = base.Columns["ChargePts"];
                this.columnScouterName = base.Columns["ScouterName"];
                this.columnScouterError = base.Columns["ScouterError"];
                this.columnDefense = base.Columns["Defense"];
                this.columnAvoidance = base.Columns["Avoidance"];
                this.columnStrategy = base.Columns["Strategy"];
                this.columnmatch_event = base.Columns["match_event"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTeam = new global::System.Data.DataColumn("Team", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeam);
                this.columnMatch = new global::System.Data.DataColumn("Match", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatch);
                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime);
                this.columnRecordType = new global::System.Data.DataColumn("RecordType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordType);
                this.columnMode = new global::System.Data.DataColumn("Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMode);
                this.columnMobility = new global::System.Data.DataColumn("Mobility", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobility);
                this.columnAcqSub1 = new global::System.Data.DataColumn("AcqSub1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqSub1);
                this.columnAcqSub2 = new global::System.Data.DataColumn("AcqSub2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqSub2);
                this.columnAcqFComm = new global::System.Data.DataColumn("AcqFComm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqFComm);
                this.columnAcqFLoad = new global::System.Data.DataColumn("AcqFLoad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqFLoad);
                this.columnAcqFOther = new global::System.Data.DataColumn("AcqFOther", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqFOther);
                this.columnAcqFOpps = new global::System.Data.DataColumn("AcqFOpps", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqFOpps);
                this.columnDelTop = new global::System.Data.DataColumn("DelTop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelTop);
                this.columnDelMid = new global::System.Data.DataColumn("DelMid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelMid);
                this.columnDelBot = new global::System.Data.DataColumn("DelBot", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelBot);
                this.columnDelFloor = new global::System.Data.DataColumn("DelFloor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelFloor);
                this.columnDelOut = new global::System.Data.DataColumn("DelOut", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelOut);
                this.columnDelCoop = new global::System.Data.DataColumn("DelCoop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoop);
                this.columnDelDrop = new global::System.Data.DataColumn("DelDrop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelDrop);
                this.columnCone = new global::System.Data.DataColumn("Cone", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCone);
                this.columnCube = new global::System.Data.DataColumn("Cube", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCube);
                this.columnParked = new global::System.Data.DataColumn("Parked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParked);
                this.columnDocked = new global::System.Data.DataColumn("Docked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocked);
                this.columnEngaged = new global::System.Data.DataColumn("Engaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngaged);
                this.columnChargePart = new global::System.Data.DataColumn("ChargePart", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargePart);
                this.columnEngageT = new global::System.Data.DataColumn("EngageT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngageT);
                this.columnEngageFail = new global::System.Data.DataColumn("EngageFail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngageFail);
                this.columnSetup = new global::System.Data.DataColumn("Setup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetup);
                this.columnAutoPts = new global::System.Data.DataColumn("AutoPts", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoPts);
                this.columnGridPts = new global::System.Data.DataColumn("GridPts", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridPts);
                this.columnChargePts = new global::System.Data.DataColumn("ChargePts", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargePts);
                this.columnScouterName = new global::System.Data.DataColumn("ScouterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScouterName);
                this.columnScouterError = new global::System.Data.DataColumn("ScouterError", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScouterError);
                this.columnDefense = new global::System.Data.DataColumn("Defense", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefense);
                this.columnAvoidance = new global::System.Data.DataColumn("Avoidance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvoidance);
                this.columnStrategy = new global::System.Data.DataColumn("Strategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrategy);
                this.columnmatch_event = new global::System.Data.DataColumn("match_event", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatch_event);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTeam.MaxLength = 2147483647;
                this.columnMatch.AllowDBNull = false;
                this.columnTime.AllowDBNull = false;
                this.columnRecordType.MaxLength = 2147483647;
                this.columnMode.MaxLength = 2147483647;
                this.columnMobility.AllowDBNull = false;
                this.columnAcqSub1.AllowDBNull = false;
                this.columnAcqSub2.AllowDBNull = false;
                this.columnAcqFComm.AllowDBNull = false;
                this.columnAcqFLoad.AllowDBNull = false;
                this.columnAcqFOther.AllowDBNull = false;
                this.columnAcqFOpps.AllowDBNull = false;
                this.columnDelTop.AllowDBNull = false;
                this.columnDelMid.AllowDBNull = false;
                this.columnDelBot.AllowDBNull = false;
                this.columnDelFloor.AllowDBNull = false;
                this.columnDelOut.AllowDBNull = false;
                this.columnDelCoop.AllowDBNull = false;
                this.columnDelDrop.AllowDBNull = false;
                this.columnCone.AllowDBNull = false;
                this.columnCube.AllowDBNull = false;
                this.columnParked.AllowDBNull = false;
                this.columnDocked.AllowDBNull = false;
                this.columnEngaged.AllowDBNull = false;
                this.columnChargePart.AllowDBNull = false;
                this.columnEngageT.AllowDBNull = false;
                this.columnEngageFail.MaxLength = 2147483647;
                this.columnSetup.AllowDBNull = false;
                this.columnAutoPts.AllowDBNull = false;
                this.columnGridPts.AllowDBNull = false;
                this.columnChargePts.AllowDBNull = false;
                this.columnScouterName.MaxLength = 2147483647;
                this.columnScouterError.AllowDBNull = false;
                this.columnDefense.AllowDBNull = false;
                this.columnAvoidance.AllowDBNull = false;
                this.columnStrategy.MaxLength = 2147483647;
                this.columnmatch_event.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow NewUpdatePreviewsRow() {
                return ((UpdatePreviewsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UpdatePreviewsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UpdatePreviewsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UpdatePreviewsRowChanged != null)) {
                    this.UpdatePreviewsRowChanged(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UpdatePreviewsRowChanging != null)) {
                    this.UpdatePreviewsRowChanging(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UpdatePreviewsRowDeleted != null)) {
                    this.UpdatePreviewsRowDeleted(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UpdatePreviewsRowDeleting != null)) {
                    this.UpdatePreviewsRowDeleting(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveUpdatePreviewsRow(UpdatePreviewsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _2023seasondbDataSet6 ds = new _2023seasondbDataSet6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UpdatePreviewsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UpdatePreviewsRow : global::System.Data.DataRow {
            
            private UpdatePreviewsDataTable tableUpdatePreviews;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UpdatePreviewsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUpdatePreviews = ((UpdatePreviewsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableUpdatePreviews.IdColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Team {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.TeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Team\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.TeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Match {
                get {
                    return ((int)(this[this.tableUpdatePreviews.MatchColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.MatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Time {
                get {
                    return ((global::System.DateTime)(this[this.tableUpdatePreviews.TimeColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RecordType {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.RecordTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordType\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.RecordTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Mode {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mode\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Mobility {
                get {
                    return ((int)(this[this.tableUpdatePreviews.MobilityColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.MobilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqSub1 {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqSub1Column]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqSub1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqSub2 {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqSub2Column]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqSub2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqFComm {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqFCommColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqFCommColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqFLoad {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqFLoadColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqFLoadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqFOther {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqFOtherColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqFOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqFOpps {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqFOppsColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqFOppsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelTop {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelTopColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelMid {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelMidColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelMidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelBot {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelBotColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelBotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelFloor {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelFloorColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelFloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelOut {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelOutColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoop {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelCoopColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelCoopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelDrop {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelDropColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelDropColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Cone {
                get {
                    return ((int)(this[this.tableUpdatePreviews.ConeColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ConeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Cube {
                get {
                    return ((int)(this[this.tableUpdatePreviews.CubeColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.CubeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Parked {
                get {
                    return ((int)(this[this.tableUpdatePreviews.ParkedColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ParkedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Docked {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DockedColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Engaged {
                get {
                    return ((int)(this[this.tableUpdatePreviews.EngagedColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.EngagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ChargePart {
                get {
                    return ((int)(this[this.tableUpdatePreviews.ChargePartColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ChargePartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double EngageT {
                get {
                    return ((double)(this[this.tableUpdatePreviews.EngageTColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.EngageTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EngageFail {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.EngageFailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngageFail\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.EngageFailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Setup {
                get {
                    return ((int)(this[this.tableUpdatePreviews.SetupColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.SetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AutoPts {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AutoPtsColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AutoPtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int GridPts {
                get {
                    return ((int)(this[this.tableUpdatePreviews.GridPtsColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.GridPtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ChargePts {
                get {
                    return ((int)(this[this.tableUpdatePreviews.ChargePtsColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ChargePtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ScouterName {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.ScouterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScouterName\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.ScouterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ScouterError {
                get {
                    return ((int)(this[this.tableUpdatePreviews.ScouterErrorColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ScouterErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Defense {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DefenseColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DefenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Avoidance {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AvoidanceColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AvoidanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Strategy {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.StrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Strategy\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.StrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string match_event {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.match_eventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'match_event\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.match_eventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTeamNull() {
                return this.IsNull(this.tableUpdatePreviews.TeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTeamNull() {
                this[this.tableUpdatePreviews.TeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRecordTypeNull() {
                return this.IsNull(this.tableUpdatePreviews.RecordTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRecordTypeNull() {
                this[this.tableUpdatePreviews.RecordTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeNull() {
                return this.IsNull(this.tableUpdatePreviews.ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeNull() {
                this[this.tableUpdatePreviews.ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEngageFailNull() {
                return this.IsNull(this.tableUpdatePreviews.EngageFailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEngageFailNull() {
                this[this.tableUpdatePreviews.EngageFailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsScouterNameNull() {
                return this.IsNull(this.tableUpdatePreviews.ScouterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetScouterNameNull() {
                this[this.tableUpdatePreviews.ScouterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStrategyNull() {
                return this.IsNull(this.tableUpdatePreviews.StrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStrategyNull() {
                this[this.tableUpdatePreviews.StrategyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismatch_eventNull() {
                return this.IsNull(this.tableUpdatePreviews.match_eventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmatch_eventNull() {
                this[this.tableUpdatePreviews.match_eventColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class UpdatePreviewsRowChangeEvent : global::System.EventArgs {
            
            private UpdatePreviewsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRowChangeEvent(UpdatePreviewsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace T250DynoScout_v2023._2023seasondbDataSet6TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UpdatePreviewsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdatePreviewsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UpdatePreviews";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Team", "Team");
            tableMapping.ColumnMappings.Add("Match", "Match");
            tableMapping.ColumnMappings.Add("Time", "Time");
            tableMapping.ColumnMappings.Add("RecordType", "RecordType");
            tableMapping.ColumnMappings.Add("Mode", "Mode");
            tableMapping.ColumnMappings.Add("Mobility", "Mobility");
            tableMapping.ColumnMappings.Add("AcqSub1", "AcqSub1");
            tableMapping.ColumnMappings.Add("AcqSub2", "AcqSub2");
            tableMapping.ColumnMappings.Add("AcqFComm", "AcqFComm");
            tableMapping.ColumnMappings.Add("AcqFLoad", "AcqFLoad");
            tableMapping.ColumnMappings.Add("AcqFOther", "AcqFOther");
            tableMapping.ColumnMappings.Add("AcqFOpps", "AcqFOpps");
            tableMapping.ColumnMappings.Add("DelTop", "DelTop");
            tableMapping.ColumnMappings.Add("DelMid", "DelMid");
            tableMapping.ColumnMappings.Add("DelBot", "DelBot");
            tableMapping.ColumnMappings.Add("DelFloor", "DelFloor");
            tableMapping.ColumnMappings.Add("DelOut", "DelOut");
            tableMapping.ColumnMappings.Add("DelCoop", "DelCoop");
            tableMapping.ColumnMappings.Add("DelDrop", "DelDrop");
            tableMapping.ColumnMappings.Add("Cone", "Cone");
            tableMapping.ColumnMappings.Add("Cube", "Cube");
            tableMapping.ColumnMappings.Add("Parked", "Parked");
            tableMapping.ColumnMappings.Add("Docked", "Docked");
            tableMapping.ColumnMappings.Add("Engaged", "Engaged");
            tableMapping.ColumnMappings.Add("ChargePart", "ChargePart");
            tableMapping.ColumnMappings.Add("EngageT", "EngageT");
            tableMapping.ColumnMappings.Add("EngageFail", "EngageFail");
            tableMapping.ColumnMappings.Add("Setup", "Setup");
            tableMapping.ColumnMappings.Add("AutoPts", "AutoPts");
            tableMapping.ColumnMappings.Add("GridPts", "GridPts");
            tableMapping.ColumnMappings.Add("ChargePts", "ChargePts");
            tableMapping.ColumnMappings.Add("ScouterName", "ScouterName");
            tableMapping.ColumnMappings.Add("ScouterError", "ScouterError");
            tableMapping.ColumnMappings.Add("Defense", "Defense");
            tableMapping.ColumnMappings.Add("Avoidance", "Avoidance");
            tableMapping.ColumnMappings.Add("Strategy", "Strategy");
            tableMapping.ColumnMappings.Add("match_event", "match_event");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UpdatePreviews] WHERE (([Id] = @Original_Id) AND ([Match] = @Original_Match) AND ([Time] = @Original_Time) AND ([Mobility] = @Original_Mobility) AND ([AcqSub1] = @Original_AcqSub1) AND ([AcqSub2] = @Original_AcqSub2) AND ([AcqFComm] = @Original_AcqFComm) AND ([AcqFLoad] = @Original_AcqFLoad) AND ([AcqFOther] = @Original_AcqFOther) AND ([AcqFOpps] = @Original_AcqFOpps) AND ([DelTop] = @Original_DelTop) AND ([DelMid] = @Original_DelMid) AND ([DelBot] = @Original_DelBot) AND ([DelFloor] = @Original_DelFloor) AND ([DelOut] = @Original_DelOut) AND ([DelCoop] = @Original_DelCoop) AND ([DelDrop] = @Original_DelDrop) AND ([Cone] = @Original_Cone) AND ([Cube] = @Original_Cube) AND ([Parked] = @Original_Parked) AND ([Docked] = @Original_Docked) AND ([Engaged] = @Original_Engaged) AND ([ChargePart] = @Original_ChargePart) AND ([EngageT] = @Original_EngageT) AND ([Setup] = @Original_Setup) AND ([AutoPts] = @Original_AutoPts) AND ([GridPts] = @Original_GridPts) AND ([ChargePts] = @Original_ChargePts) AND ([ScouterError] = @Original_ScouterError) AND ([Defense] = @Original_Defense) AND ([Avoidance] = @Original_Avoidance))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobility", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobility", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqSub1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqSub2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFComm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFComm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFLoad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFLoad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFOther", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOther", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFOpps", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOpps", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelMid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelMid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelBot", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelBot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelFloor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFloor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelDrop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelDrop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cube", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cube", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Parked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Docked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Docked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Engaged", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engaged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChargePart", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EngageT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngageT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Setup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Setup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridPts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChargePts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScouterError", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Defense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Avoidance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UpdatePreviews] ([Team], [Match], [Time], [RecordType], [Mode], [Mobility], [AcqSub1], [AcqSub2], [AcqFComm], [AcqFLoad], [AcqFOther], [AcqFOpps], [DelTop], [DelMid], [DelBot], [DelFloor], [DelOut], [DelCoop], [DelDrop], [Cone], [Cube], [Parked], [Docked], [Engaged], [ChargePart], [EngageT], [EngageFail], [Setup], [AutoPts], [GridPts], [ChargePts], [ScouterName], [ScouterError], [Defense], [Avoidance], [Strategy], [match_event]) VALUES (@Team, @Match, @Time, @RecordType, @Mode, @Mobility, @AcqSub1, @AcqSub2, @AcqFComm, @AcqFLoad, @AcqFOther, @AcqFOpps, @DelTop, @DelMid, @DelBot, @DelFloor, @DelOut, @DelCoop, @DelDrop, @Cone, @Cube, @Parked, @Docked, @Engaged, @ChargePart, @EngageT, @EngageFail, @Setup, @AutoPts, @GridPts, @ChargePts, @ScouterName, @ScouterError, @Defense, @Avoidance, @Strategy, @match_event);
SELECT Id, Team, Match, Time, RecordType, Mode, Mobility, AcqSub1, AcqSub2, AcqFComm, AcqFLoad, AcqFOther, AcqFOpps, DelTop, DelMid, DelBot, DelFloor, DelOut, DelCoop, DelDrop, Cone, Cube, Parked, Docked, Engaged, ChargePart, EngageT, EngageFail, Setup, AutoPts, GridPts, ChargePts, ScouterName, ScouterError, Defense, Avoidance, Strategy, match_event FROM UpdatePreviews WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Team", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Team", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobility", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqSub1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqSub2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFComm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFComm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFLoad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFLoad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFOther", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFOpps", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOpps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelMid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelMid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelBot", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelBot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelFloor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFloor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelDrop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelDrop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cube", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cube", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Docked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Docked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Engaged", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engaged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChargePart", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngageT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngageT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngageFail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngageFail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Setup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Setup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridPts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChargePts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterError", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Defense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Avoidance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Strategy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Strategy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@match_event", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "match_event", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[UpdatePreviews] SET [Team] = @Team, [Match] = @Match, [Time] = @Tim" +
                "e, [RecordType] = @RecordType, [Mode] = @Mode, [Mobility] = @Mobility, [AcqSub1]" +
                " = @AcqSub1, [AcqSub2] = @AcqSub2, [AcqFComm] = @AcqFComm, [AcqFLoad] = @AcqFLoa" +
                "d, [AcqFOther] = @AcqFOther, [AcqFOpps] = @AcqFOpps, [DelTop] = @DelTop, [DelMid" +
                "] = @DelMid, [DelBot] = @DelBot, [DelFloor] = @DelFloor, [DelOut] = @DelOut, [De" +
                "lCoop] = @DelCoop, [DelDrop] = @DelDrop, [Cone] = @Cone, [Cube] = @Cube, [Parked" +
                "] = @Parked, [Docked] = @Docked, [Engaged] = @Engaged, [ChargePart] = @ChargePar" +
                "t, [EngageT] = @EngageT, [EngageFail] = @EngageFail, [Setup] = @Setup, [AutoPts]" +
                " = @AutoPts, [GridPts] = @GridPts, [ChargePts] = @ChargePts, [ScouterName] = @Sc" +
                "outerName, [ScouterError] = @ScouterError, [Defense] = @Defense, [Avoidance] = @" +
                "Avoidance, [Strategy] = @Strategy, [match_event] = @match_event WHERE (([Id] = @" +
                "Original_Id) AND ([Match] = @Original_Match) AND ([Time] = @Original_Time) AND (" +
                "[Mobility] = @Original_Mobility) AND ([AcqSub1] = @Original_AcqSub1) AND ([AcqSu" +
                "b2] = @Original_AcqSub2) AND ([AcqFComm] = @Original_AcqFComm) AND ([AcqFLoad] =" +
                " @Original_AcqFLoad) AND ([AcqFOther] = @Original_AcqFOther) AND ([AcqFOpps] = @" +
                "Original_AcqFOpps) AND ([DelTop] = @Original_DelTop) AND ([DelMid] = @Original_D" +
                "elMid) AND ([DelBot] = @Original_DelBot) AND ([DelFloor] = @Original_DelFloor) A" +
                "ND ([DelOut] = @Original_DelOut) AND ([DelCoop] = @Original_DelCoop) AND ([DelDr" +
                "op] = @Original_DelDrop) AND ([Cone] = @Original_Cone) AND ([Cube] = @Original_C" +
                "ube) AND ([Parked] = @Original_Parked) AND ([Docked] = @Original_Docked) AND ([E" +
                "ngaged] = @Original_Engaged) AND ([ChargePart] = @Original_ChargePart) AND ([Eng" +
                "ageT] = @Original_EngageT) AND ([Setup] = @Original_Setup) AND ([AutoPts] = @Ori" +
                "ginal_AutoPts) AND ([GridPts] = @Original_GridPts) AND ([ChargePts] = @Original_" +
                "ChargePts) AND ([ScouterError] = @Original_ScouterError) AND ([Defense] = @Origi" +
                "nal_Defense) AND ([Avoidance] = @Original_Avoidance));\r\nSELECT Id, Team, Match, " +
                "Time, RecordType, Mode, Mobility, AcqSub1, AcqSub2, AcqFComm, AcqFLoad, AcqFOthe" +
                "r, AcqFOpps, DelTop, DelMid, DelBot, DelFloor, DelOut, DelCoop, DelDrop, Cone, C" +
                "ube, Parked, Docked, Engaged, ChargePart, EngageT, EngageFail, Setup, AutoPts, G" +
                "ridPts, ChargePts, ScouterName, ScouterError, Defense, Avoidance, Strategy, matc" +
                "h_event FROM UpdatePreviews WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Team", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Team", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobility", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqSub1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqSub2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFComm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFComm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFLoad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFLoad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFOther", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqFOpps", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOpps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelTop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelMid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelMid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelBot", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelBot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelFloor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFloor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelDrop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelDrop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cube", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cube", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Docked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Docked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Engaged", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engaged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChargePart", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngageT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngageT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EngageFail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngageFail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Setup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Setup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GridPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridPts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChargePts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterError", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Defense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Avoidance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Strategy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Strategy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@match_event", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "match_event", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobility", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobility", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqSub1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqSub2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqSub2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFComm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFComm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFLoad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFLoad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFOther", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOther", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqFOpps", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqFOpps", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelTop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelTop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelMid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelMid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelBot", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelBot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelFloor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFloor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelDrop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelDrop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cube", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cube", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Parked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Docked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Docked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Engaged", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engaged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChargePart", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EngageT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EngageT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Setup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Setup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GridPts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GridPts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChargePts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChargePts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScouterError", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Defense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Avoidance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::T250DynoScout_v2023.Properties.Settings.Default._2023seasondbConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, Team, Match, Time, RecordType, Mode, Mobility, AcqSub1, AcqSub2, AcqFComm, AcqFLoad, AcqFOther, AcqFOpps, DelTop, DelMid, DelBot, DelFloor, DelOut, DelCoop, DelDrop, Cone, Cube, Parked, Docked, Engaged, ChargePart, EngageT, EngageFail, Setup, AutoPts, GridPts, ChargePts, ScouterName, ScouterError, Defense, Avoidance, Strategy, match_event FROM dbo.UpdatePreviews";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_2023seasondbDataSet6.UpdatePreviewsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _2023seasondbDataSet6.UpdatePreviewsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _2023seasondbDataSet6.UpdatePreviewsDataTable dataTable = new _2023seasondbDataSet6.UpdatePreviewsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_2023seasondbDataSet6.UpdatePreviewsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_2023seasondbDataSet6 dataSet) {
            return this.Adapter.Update(dataSet, "UpdatePreviews");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    int Original_Mobility, 
                    int Original_AcqSub1, 
                    int Original_AcqSub2, 
                    int Original_AcqFComm, 
                    int Original_AcqFLoad, 
                    int Original_AcqFOther, 
                    int Original_AcqFOpps, 
                    int Original_DelTop, 
                    int Original_DelMid, 
                    int Original_DelBot, 
                    int Original_DelFloor, 
                    int Original_DelOut, 
                    int Original_DelCoop, 
                    int Original_DelDrop, 
                    int Original_Cone, 
                    int Original_Cube, 
                    int Original_Parked, 
                    int Original_Docked, 
                    int Original_Engaged, 
                    int Original_ChargePart, 
                    double Original_EngageT, 
                    int Original_Setup, 
                    int Original_AutoPts, 
                    int Original_GridPts, 
                    int Original_ChargePts, 
                    int Original_ScouterError, 
                    int Original_Defense, 
                    int Original_Avoidance) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Match));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Time));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Mobility));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_AcqSub1));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_AcqSub2));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_AcqFComm));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_AcqFLoad));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_AcqFOther));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_AcqFOpps));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DelTop));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_DelMid));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DelBot));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_DelFloor));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_DelOut));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_DelCoop));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_DelDrop));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_Cone));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_Cube));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_Parked));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_Docked));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_Engaged));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_ChargePart));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_EngageT));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_Setup));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_AutoPts));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_GridPts));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_ChargePts));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_ScouterError));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_Defense));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_Avoidance));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    int Mobility, 
                    int AcqSub1, 
                    int AcqSub2, 
                    int AcqFComm, 
                    int AcqFLoad, 
                    int AcqFOther, 
                    int AcqFOpps, 
                    int DelTop, 
                    int DelMid, 
                    int DelBot, 
                    int DelFloor, 
                    int DelOut, 
                    int DelCoop, 
                    int DelDrop, 
                    int Cone, 
                    int Cube, 
                    int Parked, 
                    int Docked, 
                    int Engaged, 
                    int ChargePart, 
                    double EngageT, 
                    string EngageFail, 
                    int Setup, 
                    int AutoPts, 
                    int GridPts, 
                    int ChargePts, 
                    string ScouterName, 
                    int ScouterError, 
                    int Defense, 
                    int Avoidance, 
                    string Strategy, 
                    string match_event) {
            if ((Team == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Team));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Match));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Time));
            if ((RecordType == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RecordType));
            }
            if ((Mode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Mode));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Mobility));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(AcqSub1));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(AcqSub2));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(AcqFComm));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(AcqFLoad));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(AcqFOther));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(AcqFOpps));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(DelTop));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(DelMid));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(DelBot));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(DelFloor));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(DelOut));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(DelCoop));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(DelDrop));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Cone));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Cube));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Parked));
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Docked));
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Engaged));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(ChargePart));
            this.Adapter.InsertCommand.Parameters[25].Value = ((double)(EngageT));
            if ((EngageFail == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(EngageFail));
            }
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Setup));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(AutoPts));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(GridPts));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(ChargePts));
            if ((ScouterName == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(ScouterName));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(ScouterError));
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(Defense));
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(Avoidance));
            if ((Strategy == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Strategy));
            }
            if ((match_event == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(match_event));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    int Mobility, 
                    int AcqSub1, 
                    int AcqSub2, 
                    int AcqFComm, 
                    int AcqFLoad, 
                    int AcqFOther, 
                    int AcqFOpps, 
                    int DelTop, 
                    int DelMid, 
                    int DelBot, 
                    int DelFloor, 
                    int DelOut, 
                    int DelCoop, 
                    int DelDrop, 
                    int Cone, 
                    int Cube, 
                    int Parked, 
                    int Docked, 
                    int Engaged, 
                    int ChargePart, 
                    double EngageT, 
                    string EngageFail, 
                    int Setup, 
                    int AutoPts, 
                    int GridPts, 
                    int ChargePts, 
                    string ScouterName, 
                    int ScouterError, 
                    int Defense, 
                    int Avoidance, 
                    string Strategy, 
                    string match_event, 
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    int Original_Mobility, 
                    int Original_AcqSub1, 
                    int Original_AcqSub2, 
                    int Original_AcqFComm, 
                    int Original_AcqFLoad, 
                    int Original_AcqFOther, 
                    int Original_AcqFOpps, 
                    int Original_DelTop, 
                    int Original_DelMid, 
                    int Original_DelBot, 
                    int Original_DelFloor, 
                    int Original_DelOut, 
                    int Original_DelCoop, 
                    int Original_DelDrop, 
                    int Original_Cone, 
                    int Original_Cube, 
                    int Original_Parked, 
                    int Original_Docked, 
                    int Original_Engaged, 
                    int Original_ChargePart, 
                    double Original_EngageT, 
                    int Original_Setup, 
                    int Original_AutoPts, 
                    int Original_GridPts, 
                    int Original_ChargePts, 
                    int Original_ScouterError, 
                    int Original_Defense, 
                    int Original_Avoidance, 
                    int Id) {
            if ((Team == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Team));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Match));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Time));
            if ((RecordType == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(RecordType));
            }
            if ((Mode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Mode));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Mobility));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(AcqSub1));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(AcqSub2));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(AcqFComm));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(AcqFLoad));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(AcqFOther));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(AcqFOpps));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(DelTop));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(DelMid));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(DelBot));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(DelFloor));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(DelOut));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(DelCoop));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(DelDrop));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Cone));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Cube));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Parked));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Docked));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Engaged));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ChargePart));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(EngageT));
            if ((EngageFail == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(EngageFail));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Setup));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(AutoPts));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(GridPts));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(ChargePts));
            if ((ScouterName == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(ScouterName));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(ScouterError));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Defense));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Avoidance));
            if ((Strategy == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Strategy));
            }
            if ((match_event == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(match_event));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Match));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_Time));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_Mobility));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_AcqSub1));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_AcqSub2));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_AcqFComm));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_AcqFLoad));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_AcqFOther));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_AcqFOpps));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_DelTop));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_DelMid));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_DelBot));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_DelFloor));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_DelOut));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_DelCoop));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_DelDrop));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_Cone));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_Cube));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_Parked));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_Docked));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_Engaged));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_ChargePart));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_EngageT));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_Setup));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_AutoPts));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_GridPts));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_ChargePts));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_ScouterError));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_Defense));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_Avoidance));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    int Mobility, 
                    int AcqSub1, 
                    int AcqSub2, 
                    int AcqFComm, 
                    int AcqFLoad, 
                    int AcqFOther, 
                    int AcqFOpps, 
                    int DelTop, 
                    int DelMid, 
                    int DelBot, 
                    int DelFloor, 
                    int DelOut, 
                    int DelCoop, 
                    int DelDrop, 
                    int Cone, 
                    int Cube, 
                    int Parked, 
                    int Docked, 
                    int Engaged, 
                    int ChargePart, 
                    double EngageT, 
                    string EngageFail, 
                    int Setup, 
                    int AutoPts, 
                    int GridPts, 
                    int ChargePts, 
                    string ScouterName, 
                    int ScouterError, 
                    int Defense, 
                    int Avoidance, 
                    string Strategy, 
                    string match_event, 
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    int Original_Mobility, 
                    int Original_AcqSub1, 
                    int Original_AcqSub2, 
                    int Original_AcqFComm, 
                    int Original_AcqFLoad, 
                    int Original_AcqFOther, 
                    int Original_AcqFOpps, 
                    int Original_DelTop, 
                    int Original_DelMid, 
                    int Original_DelBot, 
                    int Original_DelFloor, 
                    int Original_DelOut, 
                    int Original_DelCoop, 
                    int Original_DelDrop, 
                    int Original_Cone, 
                    int Original_Cube, 
                    int Original_Parked, 
                    int Original_Docked, 
                    int Original_Engaged, 
                    int Original_ChargePart, 
                    double Original_EngageT, 
                    int Original_Setup, 
                    int Original_AutoPts, 
                    int Original_GridPts, 
                    int Original_ChargePts, 
                    int Original_ScouterError, 
                    int Original_Defense, 
                    int Original_Avoidance) {
            return this.Update(Team, Match, Time, RecordType, Mode, Mobility, AcqSub1, AcqSub2, AcqFComm, AcqFLoad, AcqFOther, AcqFOpps, DelTop, DelMid, DelBot, DelFloor, DelOut, DelCoop, DelDrop, Cone, Cube, Parked, Docked, Engaged, ChargePart, EngageT, EngageFail, Setup, AutoPts, GridPts, ChargePts, ScouterName, ScouterError, Defense, Avoidance, Strategy, match_event, Original_Id, Original_Match, Original_Time, Original_Mobility, Original_AcqSub1, Original_AcqSub2, Original_AcqFComm, Original_AcqFLoad, Original_AcqFOther, Original_AcqFOpps, Original_DelTop, Original_DelMid, Original_DelBot, Original_DelFloor, Original_DelOut, Original_DelCoop, Original_DelDrop, Original_Cone, Original_Cube, Original_Parked, Original_Docked, Original_Engaged, Original_ChargePart, Original_EngageT, Original_Setup, Original_AutoPts, Original_GridPts, Original_ChargePts, Original_ScouterError, Original_Defense, Original_Avoidance, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private UpdatePreviewsTableAdapter _updatePreviewsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UpdatePreviewsTableAdapter UpdatePreviewsTableAdapter {
            get {
                return this._updatePreviewsTableAdapter;
            }
            set {
                this._updatePreviewsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._updatePreviewsTableAdapter != null) 
                            && (this._updatePreviewsTableAdapter.Connection != null))) {
                    return this._updatePreviewsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._updatePreviewsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(_2023seasondbDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._updatePreviewsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UpdatePreviews.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._updatePreviewsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(_2023seasondbDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._updatePreviewsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UpdatePreviews.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._updatePreviewsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(_2023seasondbDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._updatePreviewsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UpdatePreviews.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._updatePreviewsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(_2023seasondbDataSet6 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._updatePreviewsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._updatePreviewsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._updatePreviewsTableAdapter != null)) {
                    revertConnections.Add(this._updatePreviewsTableAdapter, this._updatePreviewsTableAdapter.Connection);
                    this._updatePreviewsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._updatePreviewsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._updatePreviewsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._updatePreviewsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._updatePreviewsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._updatePreviewsTableAdapter != null)) {
                    this._updatePreviewsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._updatePreviewsTableAdapter]));
                    this._updatePreviewsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591